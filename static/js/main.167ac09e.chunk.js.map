{"version":3,"sources":["bgs/ph.jpg","components/Watch.js","components/SignIn.js","components/SignUp.js","components/Fight.js","components/BetModal.js","components/BetSystem.js","components/Bet.js","components/YouTube.js","components/Twitter.js","components/Insta.js","components/Discover.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Watch","props","state","articles","loading","sortArg","getArticles","bind","this","setState","fetch","method","headers","body","JSON","stringify","then","response","json","news","Navbar","bg","expand","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","Link","active","onClick","setRoute","ButtonGroup","aria-label","Button","variant","class","Spinner","animation","map","article","urlToImage","width","height","alt","src","placeholder","target","rel","url","title","description","source","name","Date","publishedAt","toString","Component","SignIn","user","pass","error","signUpClicked","onUserChange","onPassChange","load","event","value","data","onRouteChange","for","onChange","type","aria-describedby","Alert","SignUp","signUp","rowCount","Fight","f1color","f2color","f1selected","f2selected","selected","changeColor","changeColorAfterSelect","setSelected","color","notSelected","notSelectedColor","index","fighter","selectFunction","picks","name1","onMouseEnter","onMouseLeave","style","includes","name2","BetModal","React","useState","show","setShow","handleClose","size","Modal","onHide","Header","closeButton","Title","Body","Footer","eventName","filter","element","getScore","hasuserBet","BetSystem","countdown","fights","selectedFighters","picture","modalOn","hasBet","correctPicks","correct","total","setSelectedList","isSelectedEmpty","showModal","hasUserBet","currentDate","toDateString","beenSelected","tempSelected","length","console","log","pick","disabled","animationIn","maxValue","text","styles","root","Provider","fight","f1","f2","division","Bet","clicked","arg","YouTube","videos","swap","vids","retVids","vid","push","snippet","resourceId","videoId","i1","i2","tempVids","link1","link2","role","frameBorder","allow","allowFullScreen","Twitter","tweets","getTweets","tweet","options","tweetId","id_str","Instagram","pics","getPics","posts","require","userInstagram","catch","pic","uri","renderItem","display_url","video_url","caption","poster","controls","likesCount","timestamp","toLocaleDateString","toLocaleTimeString","Discover","route","switch","c","padding","theme","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.167ac09e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ph.f5e16568.jpg\";","import React, { Component } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport '../css/Watch.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport {Animated} from \"react-animated-css\";\r\nimport placeholder from '../bgs/ph.jpg'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Watch extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            articles: [],\r\n            loading: true,\r\n            sortArg: 'Date'\r\n        }\r\n        this.getArticles = this.getArticles.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getArticles('publishedAt')\r\n    }\r\n\r\n    getArticles(sortArg){\r\n        this.setState({loading:true})\r\n        fetch('https://fyte-server.onrender.com/news', {\r\n            method: 'POST',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            body: JSON.stringify({sortArg: sortArg})\r\n        })\r\n            .then(response=>response.json())\r\n            .then(news => {\r\n                this.setState({articles: news.articles, loading:false, sortArg: sortArg})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand className='brand' href=\"\">FYTE</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link active href=\"\">Read</Nav.Link>\r\n                    <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'bet')}>Bet</Nav.Link>\r\n                    <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'discover')} >Discover</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Navbar>\r\n                <div className='dropdownContainer'>\r\n                    <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button onClick={this.getArticles.bind(this, 'publishedAt')} variant=\"success\">New</Button>\r\n                        <Button onClick={this.getArticles.bind(this, 'relevance')} variant=\"success\">Relevant</Button>\r\n                        <Button onClick={this.getArticles.bind(this, 'popularity')} variant=\"success\">Popular</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                {\r\n                this.state.loading ? <div class='spinnerContainer'><Spinner animation='grow' variant='light'></Spinner></div> : \r\n                this.state.articles.map(article => {\r\n                    return(\r\n                        <Animated>\r\n                            <div>\r\n                                <div id='articleContainer'>\r\n                                    {article.urlToImage ? <img id='thumbnail' width='400px' height='auto' alt='article thumbnail' src={article.urlToImage}></img>\r\n                                    :\r\n                                    <img id='thumbnail' width='400px' height='auto' alt='article thumbnail' src={placeholder}></img>\r\n                                    }\r\n                                    <div id='textandInfo'>\r\n                                        <div id='textContent'>\r\n                                            <a id='link' target=\"_blank\" rel=\"noopener noreferrer\" href={article.url}><h2 className='article'>{article.title}</h2></a>\r\n                                            <h5 className='desc'>{article.description}</h5>\r\n                                        </div>\r\n                                        <div id='articleInfo'>\r\n                                            <h6>{article.source.name}</h6>\r\n                                            <h6>|</h6>\r\n                                            <h6>{new Date(article.publishedAt).toString()}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr className='articleDivider'/>\r\n                            </div>\r\n                        </Animated>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Watch;\r\n","import React, { Component } from 'react'\r\nimport '../css/TachyonsLogin.css'\r\nimport '../css/Bet.css'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user: '',\r\n            pass: '',\r\n            error: '',\r\n            signUpClicked: false\r\n        }\r\n        this.onUserChange = this.onUserChange.bind(this);\r\n        this.onPassChange = this.onPassChange.bind(this);\r\n        this.load = this.load.bind(this)\r\n    }\r\n    onUserChange(event){\r\n        this.setState({user: event.target.value})\r\n    }\r\n    onPassChange(event){\r\n        this.setState({pass: event.target.value})\r\n    }\r\n    async load(){\r\n        this.setState({signUpClicked:true})\r\n        let response = await fetch('https://fyte-server.onrender.com/signin', {\r\n            method: 'POST',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            body: JSON.stringify({user: this.state.user, pass: this.state.pass})\r\n        })\r\n        let data = await response.json();\r\n        if(data==='loggedIn'){\r\n            this.props.onRouteChange('signedIn', this.state.user)\r\n        }\r\n        if (data==='wrongPw'){\r\n            this.setState({error: 'Incorrect password'})\r\n        }\r\n        if (data==='user not found'){\r\n            this.setState({error: 'Username not found'})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='formContent'>\r\n                <form class=\"measure center\">\r\n                    <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\r\n                    <legend class=\"f4 fw6 ph0 mh0\">Sign In to Bet</legend>\r\n                    <div class=\"mt3\">\r\n                        <label class=\"db fw6 lh-copy f6\" for=\"email-address\">Username</label>\r\n                        <input onChange={this.onUserChange} class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" aria-describedby=\"name-desc\"/>\r\n                    </div>\r\n                    <div class=\"mv3\">\r\n                        <label class=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n                        <input onChange={this.onPassChange} class=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div class=\"\">\r\n                    <Button onClick={this.load} variant=\"outline-light\">Sign In</Button>{'Sign In'}\r\n                    </div>\r\n                    <div class=\"lh-copy mt3\">\r\n                    <a onClick = {this.props.onRouteChange.bind(this,'signUp')} href=\"#0\" class=\"f6 link dim black db\">Sign up</a>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    (this.state.error ? <Alert variant = {\"danger\"}>{this.state.error}.</Alert> : \r\n                    (this.state.signUpClicked ? <Spinner animation='border' variant=\"light\"/> : <div></div>))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/TachyonsLogin.css'\r\nimport '../css/Bet.css'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user: '',\r\n            pass: '',\r\n            error: '',\r\n            signUpClicked: false\r\n        }\r\n        this.onUserChange = this.onUserChange.bind(this);\r\n        this.onPassChange = this.onPassChange.bind(this);\r\n        this.signUp = this.signUp.bind(this);\r\n    }\r\n    onUserChange(event){\r\n        this.setState({user: event.target.value})\r\n    }\r\n    onPassChange(event){\r\n        this.setState({pass: event.target.value})\r\n    }\r\n    async signUp(){\r\n        this.setState({signUpClicked:true})\r\n        if(this.state.user && this.state.pass){\r\n            let response = await fetch('https://fyte-server.onrender.com/signup', {\r\n                method: 'POST',\r\n                headers: {'Content-Type' : 'application/json'},\r\n                body: JSON.stringify({user: this.state.user, pass: this.state.pass})\r\n            })\r\n            let data = await response.json();\r\n            if(data.rowCount===1){\r\n                this.props.onRouteChange('signedIn', this.state.user);\r\n            } else{\r\n                this.setState({error: 'Username already taken'})\r\n            }\r\n        } else{\r\n            this.setState({error:'Username and password fields must be nonempty'})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='formContent'>\r\n                <form class=\"measure center\">\r\n                    <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\r\n                    <legend class=\"f4 fw6 ph0 mh0\">Sign Up</legend>\r\n                    <div class=\"mt3\">\r\n                        <label class=\"db fw6 lh-copy f6\" for=\"email-address\">Username</label>\r\n                        <input onChange={this.onUserChange} class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                    </div>\r\n                    <div class=\"mv3\">\r\n                        <label class=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n                        <input onChange={this.onPassChange} class=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div class=\"\">\r\n                    <Button onClick={this.signUp} variant=\"outline-light\">Sign Up</Button>{'Sign Up'}\r\n                    </div>\r\n                    <div class=\"lh-copy mt3\">\r\n                    <a onClick = {this.props.onRouteChange.bind(this, 'signIn')} href=\"#0\" class=\"f6 link dim black db\">Sign In</a>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    (this.state.error ? <Alert variant = {\"danger\"}>{this.state.error}.</Alert> : \r\n                    (this.state.signUpClicked ? <Spinner animation='border' variant=\"light\"/> : <div></div>))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/Fight.css'\r\n\r\nexport default class Fight extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            f1color: 'white',\r\n            f2color: 'white',\r\n            f1selected: false,\r\n            f2selected: false,\r\n            selected: []\r\n        }\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeColorAfterSelect = this.changeColorAfterSelect.bind(this);\r\n        this.setSelected = this.setSelected.bind(this)\r\n    }\r\n    changeColor(color){ //initial state\r\n        if(this.state[color]==='white'){\r\n            this.setState({[color]:'#28a745'})\r\n        } else{\r\n            this.setState({[color]:'white'})\r\n        } \r\n    }\r\n    changeColorAfterSelect(color){ \r\n        this.setState({[color]: \"#28a745\"})\r\n    }\r\n    setSelected(selected, notSelected, notSelectedColor, index, fighter){\r\n        if(this.state[selected]){\r\n            this.props.selectFunction(fighter,index, true)\r\n            this.setState({[selected]:false})\r\n        } else{\r\n            this.props.selectFunction(fighter,index, false)\r\n            this.setState({[selected]:true, [notSelected]:false, [notSelectedColor]: \"white\"})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='line'>\r\n                    {\r\n                        this.props.picks===null ? \r\n                        <h2 id='leftFighter' onClick={this.setSelected.bind(this, 'f1selected', 'f2selected', 'f2color', this.props.index, this.props.name1)} \r\n                        onMouseEnter={this.state.f1selected ? this.changeColorAfterSelect.bind(this, 'f1color') : this.changeColor.bind(this, 'f1color')} \r\n                        onMouseLeave={this.state.f1selected ? this.changeColorAfterSelect.bind(this, 'f1color') : this.changeColor.bind(this, 'f1color')}\r\n                        style={{color: this.state.f1color}} \r\n                        className='fighter'>{this.props.name1}</h2>\r\n                        :\r\n                        (this.props.picks.includes(this.props.name1)?\r\n                        <h2 id='leftFighter' style={{color:'#28a745'}}>{this.props.name1}</h2>\r\n                        :\r\n                        <h2 id='leftFighter' style={{color:'white'}}>{this.props.name1}</h2>\r\n                        )\r\n\r\n                    }\r\n                    {\r\n                        this.props.picks===null ? \r\n                        <h2 id='rightFighter' onClick={this.setSelected.bind(this, 'f2selected', 'f1selected', 'f1color', this.props.index, this.props.name2)} \r\n                        onMouseEnter={this.state.f2selected ? this.changeColorAfterSelect.bind(this, 'f2color') : this.changeColor.bind(this, 'f2color')}\r\n                        onMouseLeave={this.state.f2selected ? this.changeColorAfterSelect.bind(this, 'f2color') : this.changeColor.bind(this, 'f2color')}\r\n                        style={{color: this.state.f2color}} \r\n                        className='fighter'>{this.props.name2}</h2>\r\n                        :\r\n                        (this.props.picks.includes(this.props.name2)?\r\n                        <h2 id='rightFighter' style={{color:'#28a745'}}>{this.props.name2}</h2>\r\n                        :\r\n                        <h2 id='rightFighter' style={{color:'white'}}>{this.props.name2}</h2>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className='spacer'></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport '../css/BetModal.css'\r\n\r\nconst BetModal = (props) => {\r\n    const [show, setShow] = React.useState(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleBet = () => { //When Bet is clicked\r\n        fetch('https://fyte-server.onrender.com/placebets', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({eventName: props.eventName, picks: props.picks.filter(element=>element), user:props.user})\r\n        }).then((response)=>{\r\n            props.getScore();\r\n            props.hasuserBet()\r\n        })\r\n        setShow(false)\r\n    };\r\n\r\n    const handleClose = () => { //When Bet is clicked\r\n        setShow(false)\r\n    };\r\n    return (\r\n        <>\r\n        <Button onClick={handleShow} size='lg' variant=\"success\">Bet</Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Your picks</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    {\r\n                        props.picks.map(fighter => {return <h3 id='fighterName'>{fighter}</h3>})\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                I'll do nootin!\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleBet}>\r\n                Dana, tell these guys what time it is!\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BetModal\r\n\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../css/BetSystem.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Fight from './Fight'\r\nimport {Animated} from \"react-animated-css\";\r\nimport BetModal from './BetModal'\r\nimport {Checkmark} from 'react-checkmark';\r\nimport { FaRegHandPointer } from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons\";\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nexport default class BetSystem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            countdown: '',\r\n            fights: [],\r\n            selectedFighters: [],\r\n            picture: '',\r\n            loading: true,\r\n            modalOn: false,\r\n            hasBet: null,\r\n            picks: [],\r\n            correctPicks: '',\r\n            correct: 0,\r\n            total: 0\r\n        }\r\n        this.setSelectedList = this.setSelectedList.bind(this);\r\n        this.isSelectedEmpty = this.isSelectedEmpty.bind(this);\r\n        this.showModal=this.showModal.bind(this); \r\n        this.hasUserBet = this.hasUserBet.bind(this);  \r\n        this.getScore = this.getScore.bind(this);\r\n    }\r\n    componentWillMount(){\r\n        fetch(\"https://fyte-server.onrender.com/nextevent\")\r\n            .then(response=>response.json())\r\n            .then(data=>{this.setState({name: data.name, fights: data.fights, picture:data.picture, loading:false, countdown:data.countdown})})\r\n        fetch('https://fyte-server.onrender.com/comparebets', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({currentDate: new Date().toDateString(), user:this.props.user})\r\n        })\r\n            .then(response=>response.json())\r\n            .then(data=>{this.setState({correctPicks:data})})\r\n            .then(()=>this.getScore())\r\n            .then(()=> this.hasUserBet())\r\n\r\n    }\r\n    getScore(){\r\n        fetch('https://fyte-server.onrender.com/getscore', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({user:this.props.user})\r\n        })\r\n            .then(response=>response.json())\r\n            .then(data=>{this.setState({correct:data.correct, total:data.total})})\r\n    }\r\n    hasUserBet(){\r\n        fetch('https://fyte-server.onrender.com/hasuserbet', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({user:this.props.user})\r\n        })\r\n            .then(response => response.json())\r\n            .then(picks => {this.setState({hasBet: picks!==null, picks: picks})})\r\n    \r\n    }\r\n    setSelectedList(fighter, index, beenSelected){\r\n        let tempSelected = this.state.selectedFighters;\r\n        if(beenSelected){\r\n            delete tempSelected[index];\r\n        } else{\r\n            tempSelected[index] = fighter;\r\n        }\r\n        this.setState({selectedFighters: tempSelected})\r\n    }\r\n    isSelectedEmpty(){\r\n        let array = this.state.selectedFighters.filter(element => element);\r\n        return array.length === 0;\r\n    }\r\n    showModal(){\r\n        this.setState({showModal:true});\r\n    }\r\n    render() {\r\n        return (\r\n                this.state.loading ? <div className=\"centerSpinner\"><Spinner animation=\"grow\" variant=\"light\" /></div> :\r\n                <div className='betContainer'>\r\n                    <div className='box'>\r\n                        <h2>Hello, {this.props.user}! The next event is:</h2>\r\n                        {console.log(this.state.countdown)}\r\n                        <div id='event'>\r\n                            <h1 className='eventTitle'>{this.state.name}</h1> - \r\n                            {this.state.countdown===0 ? <h3>(today)</h3> : \r\n                            this.state.countdown===1 ? <h3>(tomorrow)</h3> : <h3>({this.state.countdown} days)</h3>}\r\n                        </div>\r\n\r\n                        <img id='eventPic' width={'30%'} height={'auto'} alt='Event poster here.' src={this.state.picture}></img>\r\n\r\n                        {this.state.hasBet ? \r\n                        <div id='confirmed'>\r\n                            <Checkmark size='large'/> \r\n                            <h4 id='confirmation'>You've picked:</h4>\r\n                            {\r\n                                this.state.picks.map(pick => <h5 className='pick'>{pick} </h5>)\r\n                            }\r\n                        </div>\r\n                        : \r\n                        (this.isSelectedEmpty() ? <Button disabled size='lg' variant=\"success\">Bet</Button> : \r\n                            <Animated animationIn='pulse'>\r\n                                <BetModal getScore={this.getScore} hasuserBet ={this.hasUserBet} user={this.props.user} eventName={this.state.name} picks={this.state.selectedFighters}></BetModal>\r\n                            </Animated>)\r\n                        }\r\n\r\n                        <div id = 'score'>\r\n                            <h4 id='pickScore'>Your pick score:</h4>\r\n                            <CircularProgressbar maxValue={1} value={this.state.correct/this.state.total} \r\n                            text={`${this.state.correct}/${this.state.total}`} styles={{root:{width: '15%', height: 'auto'}}} />;\r\n                        </div>\r\n\r\n                        <hr id='separator' style={{color: 'white',height: 2, width: '30%'}}/>\r\n                    </div>\r\n                {\r\n                this.state.picks ? <div></div> : <div id='help'>\r\n                            <IconContext.Provider value={{ color: \"white\"}}>\r\n                                <div>\r\n                                   <FaRegHandPointer />\r\n                                </div>\r\n                            </IconContext.Provider>\r\n                            <h6 id='click'>Click a fighter's name to pick them.</h6>\r\n                        </div>\r\n                }\r\n                {\r\n                    this.state.fights.map((fight,index) => {return <Fight index={index} \r\n                                                                            name1={fight.f1.name} \r\n                                                                            name2={fight.f2.name} \r\n                                                                            division={fight.division}\r\n                                                                            selectFunction = {this.setSelectedList}\r\n                                                                            picks = {this.state.picks}\r\n                    ></Fight>\r\n                    })\r\n                }\r\n                \r\n                </div> \r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport SignIn  from \"./SignIn.js\"\r\nimport SignUp  from \"./SignUp.js\"\r\nimport BetSystem from './BetSystem.js'\r\n\r\n\r\nexport default class Bet extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            show: 'signIn',\r\n            user: ''\r\n        }\r\n        this.clicked = this.clicked.bind(this)\r\n    }\r\n    clicked(arg, user){\r\n        this.setState({show: arg, user:user})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand  className='brand' href=\"\">FYTE</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'watch')}>Read</Nav.Link>\r\n                        <Nav.Link active href=\"#\">Bet</Nav.Link>\r\n                        <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'discover')}>Discover</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {\r\n                    (this.state.show ==='signedIn' ? \r\n                    <BetSystem user={this.state.user}></BetSystem>\r\n                    : \r\n                    (this.state.show ==='signIn'? <SignIn onRouteChange = {this.clicked}></SignIn>\r\n                    :<SignUp onRouteChange = {this.clicked}></SignUp>))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/YouTube.css'\r\nimport {Animated} from \"react-animated-css\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FiArrowUpCircle } from \"react-icons/fi\";\r\n\r\nexport default class YouTube extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            videos: [],\r\n            loading: true\r\n        };\r\n        this.swap = this.swap.bind(this)\r\n    }\r\n\r\n    async componentDidMount(){  \r\n        let data = await fetch(\"https://fyte-server.onrender.com/youtube\"),\r\n        vids = await data.json(),\r\n        retVids = [];\r\n        for (let vid of vids){\r\n            retVids.push(`https://www.youtube.com/embed/${vid.snippet.resourceId.videoId}`)\r\n        }\r\n        this.setState({videos:retVids, loading:false})\r\n    }\r\n\r\n    swap(i1,i2){\r\n        let tempVids = this.state.videos;\r\n        let link1 = tempVids[i1],\r\n        link2 = tempVids[i2];\r\n        tempVids[i1] = link2;\r\n        tempVids[i2] = link1;\r\n        this.setState({videos: tempVids, loading: false})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='load'>\r\n                    <>{this.state.loading ? <Spinner animation=\"border\" role=\"status\" variant='light'></Spinner> : <div></div>}</>\r\n                </div>\r\n                <Animated>\r\n                    <div class='videos'>\r\n                            <iframe className='primary' title='0' width=\"70%\" height=\"576\" src={this.state.videos[0]} frameBorder=\"0\" allow=\"accelerometer; autoplay; \r\n                            encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            <a rel=\"noopener noreferrer\" target=\"_blank\" href='https://www.youtube.com/user/UFC/videos'><h2>More Videos</h2></a>\r\n                            <hr></hr>\r\n                            <div className='bottom'>\r\n                                <div className='secondary'>\r\n                                    <iframe className='primary' title='1' width=\"315\" height=\"auto\" src={this.state.videos[1]} frameBorder=\"0\" allow=\"accelerometer; autoplay; \r\n                                    encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                    <Button onClick={this.swap.bind(this,0, 1)} variant=\"success\"><FiArrowUpCircle size='2em'></FiArrowUpCircle></Button>{' '}\r\n                               </div>\r\n                               <div className='secondary'>\r\n                                    <iframe className='primary' title='2' width=\"315\" height=\"auto\" src={this.state.videos[2]} frameBorder=\"0\" allow=\"accelerometer; autoplay; \r\n                                    encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                    <Button onClick={this.swap.bind(this,0, 2)} variant=\"success\"><FiArrowUpCircle size='2em'></FiArrowUpCircle></Button>{' '}\r\n                               </div>\r\n                               <div className='secondary'>\r\n                                    <iframe className='primary' title='3' width=\"315\" height=\"auto\" src={this.state.videos[3]} frameBorder=\"0\" allow=\"accelerometer; autoplay; \r\n                                    encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                    <Button onClick={this.swap.bind(this,0, 3)} variant=\"success\"><FiArrowUpCircle size='2em'></FiArrowUpCircle></Button>{' '}\r\n                               </div>\r\n                               <div className='secondary'>\r\n                                    <iframe className='primary' title='4' width=\"315\" height=\"auto\" src={this.state.videos[4]} frameBorder=\"0\" allow=\"accelerometer; autoplay; \r\n                                    encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                    <Button onClick={this.swap.bind(this,0, 4)} variant=\"success\"><FiArrowUpCircle size='2em'></FiArrowUpCircle></Button>{' '}\r\n                               </div>\r\n                            </div>\r\n                    </div>\r\n                </Animated>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Tweet } from 'react-twitter-widgets'\r\nimport '../css/Twitter.css'\r\nimport {Animated} from \"react-animated-css\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nexport default class Twitter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            tweets: [],\r\n            loading: true\r\n        }\r\n        this.getTweets = this.getTweets.bind(this);\r\n    }\r\n    async componentWillMount(){\r\n        let tweets = await this.getTweets();\r\n        this.setState({tweets: tweets, loading:false})\r\n    }\r\n\r\n    getTweets(){\r\n        return fetch('https://fyte-server.onrender.com/tweets', {\r\n            method: 'get',\r\n            headers: {'Accept': 'application/json'},\r\n        })\r\n        .then(response=>response.json())\r\n        .then(tweets => {return tweets})\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tweets\">\r\n            {this.state.loading ? <Spinner animation=\"border\" role=\"status\" variant='light'></Spinner> : <div></div>}\r\n            {this.state.tweets.map((tweet) => {\r\n                return(\r\n                <Animated>\r\n                    <div id='container'>\r\n                        <Tweet options={{width: '550'}} tweetId={tweet.id_str}></Tweet>\r\n                    </div>\r\n                </Animated>\r\n                )\r\n            })}  \r\n        </div>  \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/Insta.css'\r\nimport { InstagramMedia } from 'react-instagram-media'\r\nimport {Animated} from \"react-animated-css\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\nimport { MdDateRange } from \"react-icons/md\";\r\nimport { FiExternalLink } from \"react-icons/fi\";\r\n\r\n\r\nexport default class Instagram extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pics: [],\r\n            loading: true\r\n        }\r\n        this.getPics = this.getPics.bind(this)\r\n    }\r\n    async componentWillMount(){\r\n        let data = await this.getPics(),\r\n        pics = data.posts;\r\n        this.setState({pics: pics, loading:false})\r\n    }\r\n    getPics(){\r\n        const userInstagram = require(\"user-instagram\");\r\n\r\n        return userInstagram(\"ufc\")\r\n            .then(data => {return data})\r\n            . catch(console.error);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='load'>\r\n                    <>{this.state.loading ? <Spinner animation=\"border\" role=\"status\" variant='light'></Spinner> : <div></div>}</>\r\n                </div>\r\n                <div className='ig'>\r\n                    {\r\n                        this.state.pics.map((pic) => {\r\n                          return <InstagramMedia\r\n                                    uri={pic.url}\r\n                                \r\n                                renderItem={\r\n                                    ({ display_url, video_url, type, caption }) => {\r\n                                    if (type === 'video') {\r\n                                        return (\r\n                                        <div className='post'>\r\n                                            <Animated>\r\n                                                <video width=\"320\" height=\"auto\" poster={display_url} controls>\r\n                                                    <source src={video_url} type=\"video/mp4\" />\r\n                                                </video>\r\n                                                <h6>{pic.caption}</h6>\r\n                                                <div className= 'info'>\r\n                                                    <div className = 'iconGroup'>\r\n                                                        <div className='icon' style = {{color: '#db2414'}}>\r\n                                                                <AiFillHeart />\r\n                                                            </div>\r\n                                                        <h6>{pic.likesCount}</h6>\r\n                                                    </div>\r\n                                                    <div className='iconGroup'>\r\n                                                        <div className='icon' style = {{color: '#07b3f7'}}>\r\n                                                                <MdDateRange />\r\n                                                        </div>\r\n                                                        <h6>{new Date(pic.timestamp*1000).toLocaleDateString(\"en-US\")} @ {new Date(pic.timestamp*1000).toLocaleTimeString(\"en-US\")}</h6>\r\n                                                    </div>\r\n                                                    <a rel=\"noopener noreferrer\" target='_blank' href={pic.url}>\r\n                                                    <div style = {{color: 'white'}}>\r\n                                                            <FiExternalLink />\r\n                                                    </div>\r\n                                                </a>\r\n                                                </div>\r\n                                            </Animated>\r\n                                        </div>\r\n                                        )\r\n                                    }\r\n                                    return (\r\n                                        <div className='post'>\r\n                                            <Animated>\r\n                                                <img width=\"320\" height=\"auto\" src={display_url} alt={caption}/>\r\n                                                <h6>{pic.caption}</h6>\r\n                                                <div className= 'info'>\r\n                                                    <div className = 'iconGroup'>\r\n                                                        <div className='icon' style  = {{color: '#db2414'}}>\r\n                                                                <AiFillHeart />\r\n                                                            </div>\r\n                                                        <h6>{pic.likesCount}</h6>\r\n                                                    </div>\r\n                                                    <div className='iconGroup'>\r\n                                                        <div className='icon' style = {{color: '#07b3f7'}}>\r\n                                                                <MdDateRange />\r\n                                                        </div>\r\n                                                        <h6>{new Date(pic.timestamp*1000).toLocaleDateString(\"en-US\")} @ {new Date(pic.timestamp*1000).toLocaleTimeString(\"en-US\")}</h6>\r\n                                                    </div>\r\n                                                    <a rel=\"noopener noreferrer\" target='_blank' href={pic.url}>\r\n                                                    <div style = {{color: 'white'}}>\r\n                                                            <FiExternalLink />\r\n                                                    </div>\r\n                                                </a>\r\n                                                </div>\r\n                                            </Animated>\r\n                                        </div>\r\n                                    )\r\n                                    }\r\n                                    }\r\n                                /> \r\n                        })\r\n                    }       \r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport YouTube from './YouTube.js'\r\nimport Twitter from './Twitter.js'\r\nimport Insta from './Insta.js'\r\nimport GradientButton from 'react-linear-gradient-button';\r\nimport '../css/Discover.css'\r\nimport { AiFillYoutube, AiFillTwitterCircle, AiFillInstagram } from \"react-icons/ai\";\r\n\r\n\r\n\r\nexport default class Discover extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            route: 'youtube'\r\n        }\r\n        this.switch = this.switch.bind(this);\r\n    }\r\n    switch(route){\r\n        this.setState({route: route})\r\n    }\r\n    render() {\r\n        if(this.state.route === 'youtube'){\r\n            return (\r\n                <div>\r\n                    <Navbar bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand className='brand' href=\"\">FYTE</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'watch')}>Read</Nav.Link>\r\n                            <Nav.Link href=\"\"c onClick={this.props.setRoute.bind(this,'bet')}>Bet</Nav.Link>\r\n                            <Nav.Link active href=\"\">Discover</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    <div className=\"buttons\">\r\n                        <GradientButton padding={12} className=\"btn\" theme = {\"YouTube\"}><AiFillYoutube size='2em'></AiFillYoutube></GradientButton>\r\n                        <GradientButton onClick = {this.switch.bind(this, 'twitter')} padding={12} className=\"btn\" theme = {\"Facebook Messenger\"}><AiFillTwitterCircle size='2em'></AiFillTwitterCircle></GradientButton>\r\n                        <GradientButton onClick = {this.switch.bind(this, 'insta')} padding={12} className=\"btn\" theme={\"Sublime Vivid\"}><AiFillInstagram size='2em'></AiFillInstagram></GradientButton>\r\n                    </div>\r\n                    <YouTube></YouTube>\r\n                </div>\r\n            )\r\n        } if (this.state.route==='twitter'){\r\n            return(\r\n                <div>\r\n                    <Navbar bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand className='brand' href=\"\">FYTE</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'watch')}>Read</Nav.Link>\r\n                            <Nav.Link href=\"\"c onClick={this.props.setRoute.bind(this,'bet')}>Bet</Nav.Link>\r\n                            <Nav.Link active href=\"\">Discover</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    <div className=\"buttons\">\r\n                    <GradientButton onClick = {this.switch.bind(this, 'youtube')} padding={12} className=\"btn\" theme = {\"YouTube\"}><AiFillYoutube size='2em'></AiFillYoutube></GradientButton>\r\n                        <GradientButton padding={12} className=\"btn\" theme = {\"Facebook Messenger\"}><AiFillTwitterCircle size='2em'></AiFillTwitterCircle></GradientButton>\r\n                        <GradientButton onClick = {this.switch.bind(this, 'insta')} padding={12} className=\"btn\" theme={\"Sublime Vivid\"}><AiFillInstagram size='2em'></AiFillInstagram></GradientButton>\r\n                    </div>\r\n                    <Twitter></Twitter>\r\n                </div>\r\n            )\r\n        } else{\r\n            return(\r\n                <div>\r\n                    <Navbar  bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand className='brand' href=\"\">FYTE</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"\" onClick={this.props.setRoute.bind(this,'watch')}>Read</Nav.Link>\r\n                            <Nav.Link href=\"\"c onClick={this.props.setRoute.bind(this,'bet')}>Bet</Nav.Link>\r\n                            <Nav.Link active href=\"\">Discover</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    <div className=\"buttons\">\r\n                    <GradientButton onClick = {this.switch.bind(this, 'youtube')} padding={12} className=\"btn\" theme = {\"YouTube\"}><AiFillYoutube size='2em'></AiFillYoutube></GradientButton>\r\n                        <GradientButton onClick = {this.switch.bind(this, 'twitter')} padding={12} className=\"btn\" theme = {\"Facebook Messenger\"}><AiFillTwitterCircle size='2em'></AiFillTwitterCircle></GradientButton>\r\n                        <GradientButton padding={12} className=\"btn\" theme={\"Sublime Vivid\"}><AiFillInstagram size='2em'></AiFillInstagram></GradientButton>\r\n                    </div>\r\n                    <Insta></Insta>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport {Animated} from \"react-animated-css\";\r\nimport Watch from './Watch'\r\nimport Bet from './Bet'\r\nimport Discover from './Discover'\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      route: 'landing'\r\n    }\r\n    this.setRoute = this.setRoute.bind(this);\r\n  }\r\n  componentWillMount(){\r\n    fetch('https://fyte-server.onrender.com', {\r\n            method: 'get',\r\n            headers: {'Accept': 'application/json'},\r\n        })\r\n  }\r\n\r\n  setRoute(route){\r\n    this.setState({route:route})\r\n  }\r\n\r\n  render(){\r\n    if(this.state.route==='watch'){\r\n      return <Watch setRoute={this.setRoute}></Watch>\r\n    }\r\n    if(this.state.route==='bet'){\r\n      return <Bet setRoute={this.setRoute}></Bet>\r\n    }\r\n    if(this.state.route==='discover'){\r\n      return <Discover setRoute={this.setRoute}></Discover>\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Animated animationIn=\"fadeInDownBig\">\r\n            <h1 className='logo'>FYTE</h1>\r\n          </Animated>\r\n          <Animated animationIn=\"fadeInUpBig\">\r\n            <ul className=\"nav\">\r\n              <li><button className = 'link' onClick={this.setRoute.bind(this,\"watch\")}>Read.</button></li>\r\n              <li><button className = 'link' onClick={this.setRoute.bind(this, \"bet\")}>Bet.</button></li>\r\n              <li><button className = 'link' onClick={this.setRoute.bind(this, \"discover\")}>Discover.</button></li>\r\n            </ul>\r\n          </Animated>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}